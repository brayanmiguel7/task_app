[{"C:\\Users\\BRAYAN\\Documents\\test_app\\src\\index.js":"1","C:\\Users\\BRAYAN\\Documents\\test_app\\src\\App.js":"2","C:\\Users\\BRAYAN\\Documents\\test_app\\src\\components\\Tasks.js":"3","C:\\Users\\BRAYAN\\Documents\\test_app\\src\\components\\Task.js":"4","C:\\Users\\BRAYAN\\Documents\\test_app\\src\\components\\TaskForm.js":"5","C:\\Users\\BRAYAN\\Documents\\test_app\\src\\components\\Navbar.js":"6","C:\\Users\\BRAYAN\\Documents\\test_app\\src\\components\\TaskView.js":"7","C:\\Users\\BRAYAN\\Documents\\test_app\\src\\components\\Load.js":"8","C:\\Users\\BRAYAN\\Documents\\test_app\\src\\components\\TaskUpdate.js":"9"},{"size":315,"mtime":1608045724068,"results":"10","hashOfConfig":"11"},{"size":5377,"mtime":1611239988997,"results":"12","hashOfConfig":"11"},{"size":310,"mtime":1608052503948,"results":"13","hashOfConfig":"11"},{"size":2868,"mtime":1610657743348,"results":"14","hashOfConfig":"11"},{"size":1224,"mtime":1611164608797,"results":"15","hashOfConfig":"11"},{"size":1958,"mtime":1610724824788,"results":"16","hashOfConfig":"11"},{"size":7961,"mtime":1611166529735,"results":"17","hashOfConfig":"11"},{"size":752,"mtime":1610550625056,"results":"18","hashOfConfig":"11"},{"size":2825,"mtime":1611075166828,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"5oq8t2",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},"C:\\Users\\BRAYAN\\Documents\\test_app\\src\\index.js",[],["41","42"],"C:\\Users\\BRAYAN\\Documents\\test_app\\src\\App.js",[],"C:\\Users\\BRAYAN\\Documents\\test_app\\src\\components\\Tasks.js",[],"C:\\Users\\BRAYAN\\Documents\\test_app\\src\\components\\Task.js",[],"C:\\Users\\BRAYAN\\Documents\\test_app\\src\\components\\TaskForm.js",[],"C:\\Users\\BRAYAN\\Documents\\test_app\\src\\components\\Navbar.js",[],"C:\\Users\\BRAYAN\\Documents\\test_app\\src\\components\\TaskView.js",[],"C:\\Users\\BRAYAN\\Documents\\test_app\\src\\components\\Load.js",[],"C:\\Users\\BRAYAN\\Documents\\test_app\\src\\components\\TaskUpdate.js",["43"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ArrowBackIos as BackIcon } from '@material-ui/icons';\r\nimport axios from 'axios';\r\nimport 'bootstrap';\r\nimport Load from './Load';\r\n\r\nconst url = 'http://localhost:80/api/tasks/'; //URL de la API REST\r\n\r\nclass TaskUpdate extends Component {\r\n\r\n    state = {\r\n\r\n        title: '',\r\n        description: '',\r\n        done: '',\r\n        loading: true\r\n\r\n    }\r\n\r\n    getTask = async(id) => {\r\n\r\n        const data = {\r\n\r\n            id\r\n\r\n        }\r\n\r\n        axios.post(url + 'task/', data)\r\n        .then(res => {\r\n\r\n            const { title, description, done } = res.data[0];\r\n\r\n            this.setState({\r\n\r\n                title,\r\n                description,\r\n                done,\r\n                loading : false\r\n\r\n            })\r\n        \r\n        })\r\n        .catch(error => {\r\n\r\n            console.log(error.message);\r\n\r\n        })\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        const { id } = this.props.match.params;\r\n        this.getTask(id);\r\n\r\n    }\r\n\r\n    formContent = e => {\r\n\r\n        this.setState({\r\n\r\n            [e.target.name]: e.target.value\r\n\r\n        })\r\n\r\n    }\r\n\r\n    submitForm = () => {\r\n\r\n        const { id } = this.props.match.params;\r\n        const updateTask = {\r\n\r\n            id,\r\n            title: this.state.title,\r\n            description: this.state.description,\r\n            done: this.state.done\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const { loading, title, description } = this.state;\r\n\r\n        return(\r\n\r\n            loading ?\r\n\r\n                <Load />\r\n            \r\n            :\r\n\r\n            <div>\r\n\r\n                <form onSubmit={ this.submitForm }>\r\n\r\n                    <input placeholder={ title } type='text' onChange={ this.formContent } name='title' value={ this.state.title } /><br /><br />\r\n                    <textarea placeholder={ description } name=\"description\" onChange={ this.formContent } value={ this.state.description }>\r\n                    </textarea>\r\n                    <input type=\"submit\" />\r\n\r\n                </form>\r\n\r\n                <div style={{ fontSize: '15px', display: 'inline-block', textAlign: 'center', borderBottom: '1px solid blue' }} \r\n                className='col-auto p-0'>\r\n\r\n                    <Link className='btn' type='button' to='/'>\r\n                            \r\n                        <BackIcon style={{ display: 'inline-block', fontSize: '10px', marginTop: '1px', marginBottom: '4px' }} /> \r\n                        { /* alignItems con display: flex ayuda a alinear los items al medio del elemento */ }\r\n                        Back\r\n                            \r\n                    </Link>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default TaskUpdate;",["44","45"],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":72,"column":15,"nodeType":"52","messageId":"53","endLine":72,"endColumn":25},{"ruleId":"46","replacedBy":"54"},{"ruleId":"48","replacedBy":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'updateTask' is assigned a value but never used.","Identifier","unusedVar",["56"],["57"],"no-global-assign","no-unsafe-negation"]